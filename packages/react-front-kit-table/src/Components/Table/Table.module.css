.alertBanner {
  background: var(--mantine-primary-color-filled);
  border: 0;
  border-radius: 0;
  height: 56px;
}

.alertToolbar {
  color: var(--mantine-color-white);
}

.internalToolbar {
  align-items: center;
  gap: 10px;
}

.menuButton {
  /* todo: works? check previously migrated component that also uses this */

  &[aria-expanded='true'] {
    & svg {
      filter: contrast(8) invert(1);
    }

    background-color: var(--mantine-primary-color-filled);
    border-radius: 4px;
    display: flex;
    height: 28px;
    width: 28px;
  }
}

.menuButtonWrapper {
  align-items: center;
  display: flex;
  height: 100%;
  justify-content: center;
  width: 100%;
}

.paper {
  border: 0;
  border-radius: 24px;
  box-shadow:
    0 3.43489px 2.74791px 0 rgba(0, 0, 0, 0.02),
    0 8.6871px 6.94968px 0 rgba(0, 0, 0, 0.02),
    0 17.72087px 14.1767px 0 rgba(0, 0, 0, 0.03),
    0 36.50164px 29.20132px 0 rgba(0, 0, 0, 0.03),
    0 100px 80px 0 rgba(0, 0, 0, 0.05);
}

.rowActions {
  /*noinspection CssInvalidAtRule*/
  @mixin smaller-than $mantine-breakpoint-sm {
    margin-left: 0;
    margin-right: 0;
  }

  & > * {
    align-items: center;
    display: flex;
    height: 1.75rem;
    justify-content: center;
    min-height: 1.75rem;
    min-width: 1.75rem;
    width: 1.75rem;
  }

  background: var(--mantine-color-gray-1);
  border-radius: 4px;
  box-shadow: none;
  display: flex;
  justify-content: space-between;
  margin-left: 24px;
  margin-right: 16px;
  opacity: 0;
  /*ref: getStylesRef(rowActions);*/
}

.rowActionsMenuOpened {
  /*ref: getStylesRef(rowActionsMenuOpened);*/
}

.rowSelected {
  & td:has(.rowActions),
  & td:has(.rowActionsMenuOpened) {
    background: var(--mantine-color-gray-1) !important;
  }
}

.table {
  & tr:hover .rowActions & tr .rowActionsMenuOpened {
    opacity: 1;
  }
}

.toolbarAction {
  background: var(--mantine-color-white);
}
